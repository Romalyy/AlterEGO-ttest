{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchPosts, removePost } from \"./news-operations\";\nconst initialState = {\n  posts: [],\n  loading: false,\n  error: null\n};\nconst panding = store => ({\n  ...store,\n  loading: true,\n  error: null\n});\nconst rejected = (store, _ref) => {\n  let {\n    payload\n  } = _ref;\n  return {\n    ...store,\n    loading: false,\n    error: payload.message\n  };\n};\nconst contactsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  extraReducers: {\n    [fetchPosts.pending]: panding,\n    [fetchPosts.fulfilled]: (store, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      return {\n        ...store,\n        loading: false,\n        posts: payload\n      };\n    },\n    [fetchPosts.rejected]: rejected,\n    [removePost.pending]: panding,\n    [removePost.fulfilled]: (store, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return {\n        ...store,\n        loading: false,\n        posts: store.posts.filter(el => el.id !== payload)\n      };\n    },\n    [removePost.rejected]: rejected\n  }\n});\nexport default contactsSlice.reducer;","map":{"version":3,"names":["createSlice","fetchPosts","removePost","initialState","posts","loading","error","panding","store","rejected","_ref","payload","message","contactsSlice","name","extraReducers","pending","fulfilled","_ref2","_ref3","filter","el","id","reducer"],"sources":["/Users/lizynroman/Documents/GitHub/react/AlterEGO-ttest/src/store/news/news-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchPosts, removePost } from \"./news-operations\";\n\nconst initialState = {\n  posts: [],\n  loading: false,\n  error: null\n};\n\nconst panding = (store) => ({\n  ...store,\n  loading: true,\n  error: null,\n});\n\nconst rejected = (store, { payload }) => ({\n  ...store,\n  loading: false,\n  error: payload.message,\n});\n\nconst contactsSlice = createSlice({\n  name: \"posts\",\n  initialState,\n  extraReducers: {\n    [fetchPosts.pending]: panding,\n    [fetchPosts.fulfilled]: (store, { payload }) => ({\n      ...store,\n      loading: false,\n      posts: payload,\n    }),\n    [fetchPosts.rejected]: rejected,\n\n    [removePost.pending]: panding,\n    [removePost.fulfilled]: (store, { payload }) => ({\n      ...store,\n      loading: false,\n      posts: store.posts.filter((el) => el.id !== payload),\n    }),\n    [removePost.rejected]: rejected,\n  },\n});\n\nexport default contactsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,EAAEC,UAAU,QAAQ,mBAAmB;AAE1D,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,OAAO,GAAIC,KAAK,KAAM;EAC1B,GAAGA,KAAK;EACRH,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAMG,QAAQ,GAAGA,CAACD,KAAK,EAAAE,IAAA;EAAA,IAAE;IAAEC;EAAQ,CAAC,GAAAD,IAAA;EAAA,OAAM;IACxC,GAAGF,KAAK;IACRH,OAAO,EAAE,KAAK;IACdC,KAAK,EAAEK,OAAO,CAACC;EACjB,CAAC;AAAA,CAAC;AAEF,MAAMC,aAAa,GAAGb,WAAW,CAAC;EAChCc,IAAI,EAAE,OAAO;EACbX,YAAY;EACZY,aAAa,EAAE;IACb,CAACd,UAAU,CAACe,OAAO,GAAGT,OAAO;IAC7B,CAACN,UAAU,CAACgB,SAAS,GAAG,CAACT,KAAK,EAAAU,KAAA;MAAA,IAAE;QAAEP;MAAQ,CAAC,GAAAO,KAAA;MAAA,OAAM;QAC/C,GAAGV,KAAK;QACRH,OAAO,EAAE,KAAK;QACdD,KAAK,EAAEO;MACT,CAAC;IAAA,CAAC;IACF,CAACV,UAAU,CAACQ,QAAQ,GAAGA,QAAQ;IAE/B,CAACP,UAAU,CAACc,OAAO,GAAGT,OAAO;IAC7B,CAACL,UAAU,CAACe,SAAS,GAAG,CAACT,KAAK,EAAAW,KAAA;MAAA,IAAE;QAAER;MAAQ,CAAC,GAAAQ,KAAA;MAAA,OAAM;QAC/C,GAAGX,KAAK;QACRH,OAAO,EAAE,KAAK;QACdD,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACgB,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACC,EAAE,KAAKX,OAAO;MACrD,CAAC;IAAA,CAAC;IACF,CAACT,UAAU,CAACO,QAAQ,GAAGA;EACzB;AACF,CAAC,CAAC;AAEF,eAAeI,aAAa,CAACU,OAAO"},"metadata":{},"sourceType":"module"}
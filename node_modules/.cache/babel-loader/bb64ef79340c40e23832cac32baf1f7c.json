{"ast":null,"code":"// import { configureStore } from '@reduxjs/toolkit';\n// import { persistReducer } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// import userReducer from './slices/userSlice';\n// import newsReducer from './news/news-slice';\n\n// export const store = configureStore({\n//     reducer: {\n//         user: userReducer,\n//         contacts: newsReducer,\n//     }\n// });\n\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport userReducer from './slices/userSlice';\nimport newsReducer from './news/news-slice';\nconst rootreduser = combineReducers({\n  user: userReducer,\n  posts: newsReducer\n});\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootreduser);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","persistReducer","persistStore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","userReducer","newsReducer","rootreduser","user","posts","persistConfig","key","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/lizynroman/Documents/GitHub/react/AlterEGO-ttest/src/store/index.js"],"sourcesContent":["// import { configureStore } from '@reduxjs/toolkit';\n// import { persistReducer } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// import userReducer from './slices/userSlice';\n// import newsReducer from './news/news-slice';\n\n// export const store = configureStore({\n//     reducer: {\n//         user: userReducer,\n//         contacts: newsReducer,\n//     }\n// });\n\nimport { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport {\n    persistReducer,\n    persistStore,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport userReducer from './slices/userSlice';\nimport newsReducer from './news/news-slice';\n\nconst rootreduser = combineReducers({\n    user: userReducer,\n    posts: newsReducer,\n});\n\nconst persistConfig = {\n  key: \"root\",\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootreduser);\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,SACIC,cAAc,EACdC,YAAY,EACZC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACL,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,WAAW,MAAM,mBAAmB;AAE3C,MAAMC,WAAW,GAAGZ,eAAe,CAAC;EAChCa,IAAI,EAAEH,WAAW;EACjBI,KAAK,EAAEH;AACX,CAAC,CAAC;AAEF,MAAMI,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACTP;AACJ,CAAC;AAED,MAAMQ,gBAAgB,GAAGhB,cAAc,CAACc,aAAa,EAAEH,WAAW,CAAC;AAEnE,OAAO,MAAMM,KAAK,GAAGnB,cAAc,CAAC;EAChCoB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACpB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMgB,SAAS,GAAGtB,YAAY,CAACgB,KAAK,CAAC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getPost, deletePost } from \"../../servises/news\";\nexport const fetchPosts = createAsyncThunk(\"posts/fetch\", async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    return await getPost();\n  } catch (error) {\n    const {\n      data,\n      status\n    } = error.response;\n    const {\n      message\n    } = error;\n    const {\n      responseURL\n    } = error.response.request;\n    return rejectWithValue({\n      data,\n      status,\n      message,\n      responseURL\n    });\n  }\n});\nexport const removePost = createAsyncThunk(\"posts/remove\", async (data, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    return await deletePost(data);\n  } catch (error) {\n    const {\n      data,\n      status\n    } = error.response;\n    const {\n      message\n    } = error;\n    const {\n      responseURL\n    } = error.response.request;\n    return rejectWithValue({\n      data,\n      status,\n      message,\n      responseURL\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","getPost","deletePost","fetchPosts","data","_ref","rejectWithValue","error","status","response","message","responseURL","request","removePost","_ref2"],"sources":["/Users/lizynroman/Documents/GitHub/react/AlterEGO-ttest/src/store/news/news-operations.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  getPost,\n  deletePost,\n} from \"../../servises/news\";\n\nexport const fetchPosts = createAsyncThunk(\n  \"posts/fetch\",\n  async (data, { rejectWithValue }) => {\n    try {\n      return await getPost();\n    } catch (error) {\n      const { data, status } = error.response;\n        const {message} = error;\n        const {responseURL}= error.response.request;\n        return rejectWithValue({ data, status, message,responseURL });\n    }\n  }\n);\nexport const removePost = createAsyncThunk(\n  \"posts/remove\",\n  async (data, { rejectWithValue }) => {\n    try {\n      return await deletePost(data);\n    } catch (error) {\n      const { data, status } = error.response;\n        const {message} = error;\n        const {responseURL}= error.response.request;\n        return rejectWithValue({ data, status, message,responseURL });\n    }\n  }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SACEC,OAAO,EACPC,UAAU,QACL,qBAAqB;AAE5B,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CACxC,aAAa,EACb,OAAOI,IAAI,EAAAC,IAAA,KAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAD,IAAA;EAC9B,IAAI;IACF,OAAO,MAAMJ,OAAO,EAAE;EACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAM;MAAEH,IAAI;MAAEI;IAAO,CAAC,GAAGD,KAAK,CAACE,QAAQ;IACrC,MAAM;MAACC;IAAO,CAAC,GAAGH,KAAK;IACvB,MAAM;MAACI;IAAW,CAAC,GAAEJ,KAAK,CAACE,QAAQ,CAACG,OAAO;IAC3C,OAAON,eAAe,CAAC;MAAEF,IAAI;MAAEI,MAAM;MAAEE,OAAO;MAACC;IAAY,CAAC,CAAC;EACjE;AACF,CAAC,CACF;AACD,OAAO,MAAME,UAAU,GAAGb,gBAAgB,CACxC,cAAc,EACd,OAAOI,IAAI,EAAAU,KAAA,KAA0B;EAAA,IAAxB;IAAER;EAAgB,CAAC,GAAAQ,KAAA;EAC9B,IAAI;IACF,OAAO,MAAMZ,UAAU,CAACE,IAAI,CAAC;EAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM;MAAEH,IAAI;MAAEI;IAAO,CAAC,GAAGD,KAAK,CAACE,QAAQ;IACrC,MAAM;MAACC;IAAO,CAAC,GAAGH,KAAK;IACvB,MAAM;MAACI;IAAW,CAAC,GAAEJ,KAAK,CAACE,QAAQ,CAACG,OAAO;IAC3C,OAAON,eAAe,CAAC;MAAEF,IAAI;MAAEI,MAAM;MAAEE,OAAO;MAACC;IAAY,CAAC,CAAC;EACjE;AACF,CAAC,CACF"},"metadata":{},"sourceType":"module"}